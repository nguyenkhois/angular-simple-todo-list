{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/todoform/todoform.component.css","webpack:///./src/app/todoform/todoform.component.html","webpack:///./src/app/todoform/todoform.component.ts","webpack:///./src/app/todolist.service.ts","webpack:///./src/app/todolist/todolist.component.css","webpack:///./src/app/todolist/todolist.component.html","webpack:///./src/app/todolist/todolist.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div class=\\\"app\\\">\\n    <p class=\\\"title\\\">Angular - Simple To-Do list</p>\\n\\n    <app-todoform></app-todoform>\\n\\n    <app-todolist></app-todolist>\\n</div>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'To-Do list';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\n\nimport { AppComponent } from './app.component';\nimport { TodoformComponent } from './todoform/todoform.component';\nimport { TodolistComponent } from './todolist/todolist.component';\n\nimport { TodolistService } from './todolist.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TodoformComponent,\n    TodolistComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule\n  ],\n  providers: [TodolistService], /* Add your services here */\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<input type=\\\"text\\\" id=\\\"txtInputTask\\\" (keyup.enter)=\\\"getInputTask()\\\" autofocus>\"","import { Component, OnInit } from '@angular/core';\nimport { Task, Tasks } from '../app.interfaces';\nimport { TodolistService } from '../todolist.service';\n\n@Component({\n  selector: 'app-todoform',\n  templateUrl: './todoform.component.html',\n  styleUrls: ['./todoform.component.css']\n})\n\nexport class TodoformComponent implements OnInit {\n    constructor(private todolistService: TodolistService) { }\n\n    ngOnInit() { }\n\n    getInputTask() {\n        const txtInput = <HTMLInputElement>document.getElementById('txtInputTask');\n        const userInput = txtInput.value.trim();\n        if (userInput.length > 0) {\n            const newTask: Task = { id: Date.now(), description: userInput, isDone: false };\n            this.todolistService.addTask(newTask);\n            txtInput.value = '';\n        }\n        console.log(this.todolistService.getAllTasks()); // Testing purpose\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Task, Tasks } from './app.interfaces';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class TodolistService {\n    tasks: Tasks = [];\n    constructor() { }\n\n    addTask(newTask: Task) {\n        this.tasks = [...this.tasks, newTask];\n        return this;\n    }\n\n    completeTask(taskId: number) {\n        const itemIndex = this.tasks.findIndex((item: Task) => item.id === taskId);\n        this.tasks = this.tasks.map((item: Task, index: number) => index === itemIndex ? {...item, isDone: !item.isDone} : item);\n        return this;\n    }\n\n    removeTask(taskId: number) {\n        this.tasks = this.tasks.filter((item: Task) => item.id !== taskId);\n        return this;\n    }\n\n    removeCompleted() {\n        this.tasks = this.tasks.filter((item: Task) => !item.isDone);\n        return this;\n    }\n\n    getAllTasks() {\n        return this.tasks;\n    }\n}\n","module.exports = \"\"","module.exports = \"<div *ngIf=\\\"tasksFromService.length > 0\\\">\\n    <ul>\\n        <li *ngFor=\\\"let task of tasksFromService\\\">\\n            <span *ngIf=\\\"task.isDone; else elseBlock\\\">\\n                <input type=\\\"checkbox\\\" (click)=\\\"handleCheck(task.id)\\\" checked>\\n                <span class=\\\"strike-text\\\">{{ task.description }}</span>\\n            </span>\\n            <ng-template #elseBlock>\\n                <input type=\\\"checkbox\\\" (click)=\\\"handleCheck(task.id)\\\">\\n                {{ task.description }}\\n            </ng-template>\\n            \\n            <button type=\\\"button\\\" (click)=\\\"handleRemove(task.id)\\\">Remove</button>\\n        </li>\\n    </ul>\\n    <button type=\\\"button\\\" class=\\\"remove-completed\\\" (click)=\\\"handleRemoveCompleted()\\\">Remove completed</button>\\n</div>\\n\"","import { Component, Input, OnInit } from '@angular/core';\nimport { Task, Tasks } from '../app.interfaces';\nimport { TodolistService } from '../todolist.service';\n\n@Component({\n  selector: 'app-todolist',\n  templateUrl: './todolist.component.html',\n  styleUrls: ['./todolist.component.css']\n})\nexport class TodolistComponent implements OnInit {\n    constructor(private todolistService: TodolistService) { }\n\n    ngOnInit() {}\n\n    // Auto listen to the service and get its values from method getAllTasks()\n    get tasksFromService() {\n        return this.todolistService.getAllTasks();\n    }\n\n    handleCheck(taskId: number) {\n        this.todolistService.completeTask(taskId);\n    }\n\n    handleRemove(taskId: number) {\n        this.todolistService.removeTask(taskId);\n    }\n\n    handleRemoveCompleted() {\n        this.todolistService.removeCompleted();\n    }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}